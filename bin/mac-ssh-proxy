# !/bin/sh
# SSH SOCKS proxy script for Mac OS X


# Get the min and max system-available ports. (for random port)
#lowerport=`sysctl net.inet.ip.portrange.first | cut -d " " -f 2`
#upperport=`sysctl net.inet.ip.portrange.last | cut -d " " -f 2`
#localport=`jot -r 1 $lowerport $upperport`

localport=44444
command=$1
server=$2

usage(){
echo ""
echo "mac-ssh-proxy is a proxy settings toggle script for OSX"
echo "mac-ssh-proxy initiates an SSH tunnel and then enables a Socks proxy"
echo ""
echo "Usage: mac-ssh-proxy [on|off|usage|no_args] server"
echo "             on: turns on network settings and starts ssh session"
echo "            off: turns off network settings and kills all ssh sessions"
echo "  usage/no args: this help menu"
echo "         server: server address / reference by ssh config"
echo ""
}

unknown_input(){
  echo "Unknown input, try again with different term"
}


proxy_on(){
  echo "Listening on localhost:$localport. Modifying network settings.."
  sudo networksetup -setsocksfirewallproxy Wi-Fi 127.0.0.1 $localport off
  echo "Starting SSH session. Will run in background for 1 day."
  ssh $server -f -D $localport sleep 1d
}


proxy_off(){
  echo "Disabling proxy in network settings."
  sudo networksetup -setsocksfirewallproxystate Wi-Fi off
}

kill_all(){
  pids=`ps -A | grep "ssh" | grep "\-D" | grep "sleep" | awk '{print $1}'`
  echo "Killing all running proxy connections."
  for pid in $pids
    do
  `kill -9 $pid`
  done
}

shutdown(){
  proxy_off
  kill_all
  echo "Proxy shutdown complete!"
}

case $command in
"on")
  proxy_on
  ;;
"off")
  shutdown
  ;;
"usage")
  usage
  ;;
*)
  unknown_input
  usage
  ;;
esac
