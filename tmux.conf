# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal "xterm-256color"

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

# Create splits and vertical splits
bind  v split-window -h -p 50 -c "#{pane_current_path}"
bind ^V split-window -h -p 50 -c "#{pane_current_path}"
bind  s split-window    -p 50 -c "#{pane_current_path}"
bind ^S split-window    -p 50 -c "#{pane_current_path}"

# Enable mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# Pane resize in all four directions using vi bindings.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
# Disabled in favor of C-q / display-panes
#bind -n C-S-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
#bind -n C-S-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
#bind -n C-S-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
#bind -n C-S-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-w run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# display pane numbers to switch between them with C-q
bind -n C-q display-panes
# default time for display panes is too fast
set -g display-panes-time 50000

# switch windows with Ctrl+Space, and Ctrl+Alt+space
bind -n C-Space next-window
bind -n C-M-Space previous-window

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
set -g mode-keys vi
#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-selection

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e set synchronize-panes on
bind E set synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# bind w to choose window in session tree
# This is a bit of a hack to make the windows
# start at index 1, since the session is now
# index 0. This keeps it inline with the remapping
# the base index for easier keyboard control
#bind w choose-tree -u

# renumber closed windows
set-option -g renumber-windows on

# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour237
set -g pane-border-fg colour245
set -g pane-active-border-fg colour71
set -g message-fg colour16
set -g message-bg colour71
set -g message-attr bold
set -g status-left "#[fg=colour235,bg=colour71,bold] #S #[fg=colour238,bg=colour237,nobold] "
set -g window-status-format "#[fg=colour249]|  #I: #W "
set -g window-status-current-format "#[fg=colour249]| #[fg=colour252,bg=colour240] #I: #W #[bg=colour237]"
set -g status-right "#h • %B %d • %I:%M %p "

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Agressive resize when clients aren't looking
set -g aggressive-resize on

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

# No escape time for vi mode
# https://superuser.com/a/252717
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 100000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'
